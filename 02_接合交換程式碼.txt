import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference('RevitNodes')
import Revit
clr.ImportExtensions(Revit.Elements)

clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

clr.AddReference('RevitAPI')
import Autodesk

#此節點的輸入將在 IN 變數中儲存為一個清單。
dataEnteringNode = IN
doc = DocumentManager.Instance.CurrentDBDocument
elementListA = UnwrapElement(IN[0])
elementListB = UnwrapElement(IN[1])
listLengthA = len(elementListA)

TransactionManager.Instance.EnsureInTransaction(doc)
i = -1
for elementA in elementListA:
	i = i + 1
	for elementB in elementListB[i]:
		try:
			if Autodesk.Revit.DB.JoinGeometryUtils.IsCuttingElementInJoin(doc, elementB, elementA):
				Autodesk.Revit.DB.JoinGeometryUtils.SwitchJoinOrder(doc, elementA, elementB)
		except:
			pass
TransactionManager.Instance.TransactionTaskDone()

#指定輸出至 OUT 變數。
OUT = IN[0]